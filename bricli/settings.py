"""
Django settings for bricli project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env(
    # Set default values and casting
    DEBUG=(bool, True),
    SUBSCRIPTIONS_ENABLED=(bool, False),
)

# Read .env file (if it exists)
env_file = os.path.join(BASE_DIR, '.env')
if os.path.exists(env_file):
    environ.Env.read_env(env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default="django-insecure-7=u=ieg2ma6h2^xi^&h2jap9r!)_03wl=aexy_$36*_-h$mv#y")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

# ALLOWED_HOSTS - Read from environment or use defaults for development
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=["127.0.0.1", "localhost", "testserver"])

# CSRF Protection
# NOTE: In production (DEBUG=False), add your actual domains here
# Example: CSRF_TRUSTED_ORIGINS = ['https://bricli.ro', 'https://www.bricli.ro']
CSRF_TRUSTED_ORIGINS = env.list(
    'CSRF_TRUSTED_ORIGINS',
    default=["http://localhost:8000", "http://127.0.0.1:8000"]
)

CSRF_FAILURE_VIEW = "django.views.csrf.csrf_failure"
CSRF_USE_SESSIONS = False
CSRF_COOKIE_HTTPONLY = False  # Set to True in production
# CSRF Cookie Security (enabled in production)
CSRF_COOKIE_SECURE = not DEBUG  # True in production (HTTPS only)

# Session Security (enabled in production)
SESSION_COOKIE_SECURE = not DEBUG  # True in production (HTTPS only)
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access
SESSION_COOKIE_SAMESITE = "Lax"  # CSRF protection


# Application definition

INSTALLED_APPS = [
    "jazzmin",  # Modern Django Admin UI - MUST be before django.contrib.admin
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",  # SEO: XML sitemaps for blog and pages
    # Third party apps
    "crispy_forms",
    "crispy_bootstrap5",
    "django_extensions",
    "rest_framework",
    "widget_tweaks",
    # Local apps
    "core",
    "accounts",
    "services",
    "messaging",
    "moderation",
    "notifications",
    "subscriptions",  # NEW: Subscription management for tiered pricing
    "blog",  # SEO-optimized blog for organic traffic
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "core.middleware.url_redirects.RomanianURLRedirectMiddleware",  # 301 redirects for old URLs
    "core.middleware.county_redirect.CountySlugRedirectMiddleware",  # 301 redirect county ID â†’ slug
    "whitenoise.middleware.WhiteNoiseMiddleware",  # Static files serving
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "csp.middleware.CSPMiddleware",  # Content Security Policy
]

ROOT_URLCONF = "bricli.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.context_processors.romanian_context",
                "core.context_processors.site_settings_context",
                "core.context_processors.user_context",
                "core.context_processors.navigation_context",
                "core.context_processors.feature_flags_context",  # BETA: Feature flags
            ],
        },
    },
]

WSGI_APPLICATION = "bricli.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# If DATABASE_URL is set in .env, use it (PostgreSQL for production)
# Otherwise, fall back to SQLite for local development
if env('DATABASE_URL', default=None):
    DATABASES = {
        'default': env.db()
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# Supported languages (P1: i18n skeleton)
LANGUAGES = [
    ("ro", "Romanian"),
    ("en", "English"),
]

LANGUAGE_CODE = "ro-ro"

TIME_ZONE = "Europe/Bucharest"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Romanian locale settings
LOCALE_PATHS = [
    BASE_DIR / "locale",
]

# Date and number formatting
DATE_FORMAT = "d.m.Y"
DATETIME_FORMAT = "d.m.Y H:i"
SHORT_DATE_FORMAT = "d.m.Y"
SHORT_DATETIME_FORMAT = "d.m.Y H:i"

# Currency settings for Romanian Leu
USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = "."
DECIMAL_SEPARATOR = ","


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Whitenoise configuration for static files
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Custom User Model
AUTH_USER_MODEL = "accounts.User"

# Email settings
from .email_settings import PRODUCTION_EMAIL_CONFIG

# Read email backend from environment (allows override)
EMAIL_BACKEND = env('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = env('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = env.int('EMAIL_PORT', default=587)
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', default=True)
EMAIL_USE_SSL = env.bool('EMAIL_USE_SSL', default=False)
EMAIL_HOST_USER = env('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD', default='')
EMAIL_TIMEOUT = env.int('EMAIL_TIMEOUT', default=30)
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='Bricli <noreply@bricli.ro>')
SERVER_EMAIL = env('SERVER_EMAIL', default='server@bricli.ro')
SUPPORT_EMAIL = env('SUPPORT_EMAIL', default='support@bricli.ro')

# Twilio SMS Configuration
# ============================================
TWILIO_ACCOUNT_SID = env('TWILIO_ACCOUNT_SID', default='')
TWILIO_AUTH_TOKEN = env('TWILIO_AUTH_TOKEN', default='')
TWILIO_PHONE_NUMBER = env('TWILIO_PHONE_NUMBER', default='')

# Language and localization
LANGUAGE_CODE = "ro-ro"
TIME_ZONE = "Europe/Bucharest"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Feature Flags
# ============================================
# Control which features are enabled in the application
# Set SUBSCRIPTIONS_ENABLED = False for BETA launch (free for everyone)
# Set SUBSCRIPTIONS_ENABLED = True to enable paid subscriptions
SUBSCRIPTIONS_ENABLED = env('SUBSCRIPTIONS_ENABLED')  # BETA MODE: All features free for everyone
BETA_FREE_TIER_LIMIT = None  # Unlimited leads for everyone during BETA

# Stripe Configuration
STRIPE_PUBLISHABLE_KEY = env('STRIPE_PUBLISHABLE_KEY', default="pk_test_51234567890abcdef")
STRIPE_SECRET_KEY = env('STRIPE_SECRET_KEY', default="sk_test_51234567890abcdef")
STRIPE_WEBHOOK_SECRET = env('STRIPE_WEBHOOK_SECRET', default="whsec_1234567890abcdef")
STRIPE_PLUS_PRICE_ID = env('STRIPE_PLUS_PRICE_ID', default="")
STRIPE_PRO_PRICE_ID = env('STRIPE_PRO_PRICE_ID', default="")

# Push Notification Settings
VAPID_PRIVATE_KEY = "your-vapid-private-key-here"
VAPID_PUBLIC_KEY = "your-vapid-public-key-here"
VAPID_ADMIN_EMAIL = "admin@bricli.ro"

# Django REST Framework Settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 20,
}

# Content Security Policy (CSP)
# Strict policy for production security - allows Bootstrap, FontAwesome, Google Fonts from CDN
# When local assets are used (P1 local-first), update these to 'self' only
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = (
    "'self'",
    "https://cdn.jsdelivr.net",  # Bootstrap JS
    "https://js.stripe.com",  # Stripe payments
    "'unsafe-inline'",  # TODO: Remove after refactoring inline scripts
)
CSP_STYLE_SRC = (
    "'self'",
    "https://cdn.jsdelivr.net",  # Bootstrap CSS
    "https://cdnjs.cloudflare.com",  # Font Awesome
    "https://fonts.googleapis.com",  # Google Fonts
    "'unsafe-inline'",  # Required for Bootstrap and inline styles
)
CSP_FONT_SRC = (
    "'self'",
    "https://fonts.gstatic.com",  # Google Fonts
    "https://cdnjs.cloudflare.com",  # Font Awesome fonts
    "data:",  # Data URIs for fonts
)
CSP_IMG_SRC = (
    "'self'",
    "data:",  # Data URIs for images
    "https:",  # Allow HTTPS images (user avatars, portfolios)
)
CSP_CONNECT_SRC = (
    "'self'",
    "https://api.stripe.com",  # Stripe API
)
CSP_FRAME_SRC = ("https://js.stripe.com",)  # Stripe payment frames

# Additional security headers
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = "DENY"

# Jazzmin Admin UI Configuration
JAZZMIN_SETTINGS = {
    # Site title and branding
    "site_title": "Bricli Admin",
    "site_header": "Bricli",
    "site_brand": "Bricli - Marketplace MeÈ™teri",
    "site_logo": None,  # Path to logo (e.g., "images/logo.png")
    "login_logo": None,
    "site_logo_classes": "img-circle",
    "site_icon": None,  # Favicon path
    "welcome_sign": "Bine ai venit Ã®n panoul de administrare Bricli",
    "copyright": "Bricli",

    # Search model in sidebar
    "search_model": ["auth.User", "accounts.CraftsmanProfile", "services.Order"],

    # User avatar field
    "user_avatar": None,

    # Top menu
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Site Principal", "url": "/", "new_window": True},
        {"model": "auth.User"},
        {"model": "services.Order"},
    ],

    # User menu on the right side of top bar
    "usermenu_links": [
        {"name": "Site Principal", "url": "/", "new_window": True},
        {"model": "auth.user"},
    ],

    # Side menu ordering
    "order_with_respect_to": ["auth", "accounts", "services", "messaging", "notifications", "subscriptions", "blog"],

    # Custom icons for models (using Font Awesome 5)
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "accounts.CraftsmanProfile": "fas fa-hammer",
        "accounts.County": "fas fa-map-marked-alt",
        "accounts.City": "fas fa-city",
        "accounts.Portfolio": "fas fa-images",
        "services.Order": "fas fa-clipboard-list",
        "services.Quote": "fas fa-file-invoice",
        "services.Review": "fas fa-star",
        "services.ServiceCategory": "fas fa-tags",
        "services.Service": "fas fa-wrench",
        "messaging.Conversation": "fas fa-comments",
        "messaging.Message": "fas fa-comment",
        "notifications.Notification": "fas fa-bell",
        "subscriptions.SubscriptionTier": "fas fa-layer-group",
        "subscriptions.CraftsmanSubscription": "fas fa-credit-card",
        "blog.Post": "fas fa-newspaper",
        "blog.Category": "fas fa-folder",
    },

    # Default icon for models without custom icon
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    # Related modal for foreign keys
    "related_modal_active": False,

    # Custom CSS/JS
    "custom_css": None,
    "custom_js": None,

    # Show/hide app list
    "show_sidebar": True,

    # Change sidebar color scheme
    "navigation_expanded": True,

    # Hide models from sidebar
    "hide_apps": [],
    "hide_models": [],

    # UI Tweaks
    "changeform_format": "horizontal_tabs",  # "horizontal_tabs", "vertical_tabs", "collapsible", "carousel"
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },
}

# Jazzmin UI Tweaks (colors, layout, etc.)
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-purple",  # navbar-primary, navbar-secondary, navbar-info, navbar-warning, navbar-danger, navbar-success
    "accent": "accent-purple",  # accent-primary, accent-secondary, accent-info, accent-warning, accent-danger, accent-success
    "navbar": "navbar-dark",  # navbar-white, navbar-dark
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-purple",  # sidebar-dark-primary, sidebar-dark-secondary, sidebar-light-primary, etc.
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",  # "default", "cerulean", "cosmo", "cyborg", "darkly", "flatly", "journal", "litera", "lumen", "lux", "materia", "minty", "pulse", "sandstone", "simplex", "slate", "solar", "spacelab", "superhero", "united", "yeti"
    "dark_mode_theme": None,  # None or theme name
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
}
