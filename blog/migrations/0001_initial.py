# Generated by Django 5.2.6 on 2025-10-19 17:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BlogCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(blank=True, help_text="FontAwesome icon class (e.g., fa-tools)", max_length=50),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("meta_title", models.CharField(blank=True, help_text="SEO title (max 60 chars)", max_length=60)),
                (
                    "meta_description",
                    models.CharField(blank=True, help_text="SEO description (max 160 chars)", max_length=160),
                ),
            ],
            options={
                "verbose_name": "Categorie Blog",
                "verbose_name_plural": "Categorii Blog",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BlogTag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Tag Blog",
                "verbose_name_plural": "Taguri Blog",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(help_text="Titlul articolului (H1)", max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("excerpt", models.TextField(help_text="Scurt rezumat (300 chars max)", max_length=300)),
                ("content", models.TextField(help_text="Conținut complet (Markdown/HTML)")),
                ("featured_image", models.ImageField(blank=True, null=True, upload_to="blog/featured/")),
                ("featured_image_alt", models.CharField(blank=True, help_text="Alt text for SEO", max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published"), ("archived", "Archived")],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="SEO title (max 60 chars) - appears in Google search results",
                        max_length=60,
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        help_text="SEO description (max 160 chars) - appears in Google search results",
                        max_length=160,
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True,
                        help_text="Cuvinte cheie separate prin virgulă (e.g., renovare baie, cost renovare)",
                        max_length=255,
                    ),
                ),
                (
                    "og_image",
                    models.ImageField(blank=True, help_text="1200x630px recommended", null=True, upload_to="blog/og/"),
                ),
                ("og_title", models.CharField(blank=True, max_length=100)),
                ("og_description", models.CharField(blank=True, max_length=200)),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("read_time_minutes", models.PositiveSmallIntegerField(default=5, help_text="Estimated reading time")),
                (
                    "schema_type",
                    models.CharField(
                        default="Article", help_text="Schema.org type (Article, HowTo, FAQPage)", max_length=50
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="blog.blogcategory",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, related_name="posts", to="blog.blogtag")),
            ],
            options={
                "verbose_name": "Articol Blog",
                "verbose_name_plural": "Articole Blog",
                "ordering": ["-published_at", "-created_at"],
                "indexes": [
                    models.Index(fields=["-published_at"], name="blog_blogpo_publish_e75c11_idx"),
                    models.Index(fields=["status"], name="blog_blogpo_status_9c1956_idx"),
                    models.Index(fields=["slug"], name="blog_blogpo_slug_361555_idx"),
                ],
            },
        ),
    ]
