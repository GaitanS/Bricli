# Generated by Django for performance optimization

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0004_order_confirmed_at_order_selected_at_and_more'),
    ]

    operations = [
        # Add indexes for Order model
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_order_status ON services_order(status);",
            reverse_sql="DROP INDEX IF EXISTS idx_order_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_order_client_status ON services_order(client_id, status);",
            reverse_sql="DROP INDEX IF EXISTS idx_order_client_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_order_created_at ON services_order(created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_order_created_at;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_order_service_county ON services_order(service_id, county_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_order_service_county;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_order_published_at ON services_order(published_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_order_published_at;"
        ),
        
        # Add indexes for Quote model
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_quote_craftsman_status ON services_quote(craftsman_id, status);",
            reverse_sql="DROP INDEX IF EXISTS idx_quote_craftsman_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_quote_order_status ON services_quote(order_id, status);",
            reverse_sql="DROP INDEX IF EXISTS idx_quote_order_status;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_quote_created_at ON services_quote(created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_quote_created_at;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_quote_expires_at ON services_quote(expires_at);",
            reverse_sql="DROP INDEX IF EXISTS idx_quote_expires_at;"
        ),
        
        # Add indexes for Review model
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_review_craftsman_rating ON services_review(craftsman_id, rating DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_review_craftsman_rating;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_review_order ON services_review(order_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_review_order;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_review_created_at ON services_review(created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_review_created_at;"
        ),
        
        # Add indexes for Service model
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_service_category_active ON services_service(category_id, is_active);",
            reverse_sql="DROP INDEX IF EXISTS idx_service_category_active;"
        ),
        
        # Add indexes for CraftsmanService model
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_craftsman_service_craftsman ON services_craftsmanservice(craftsman_id, service_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_craftsman_service_craftsman;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_craftsman_service_service ON services_craftsmanservice(service_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_craftsman_service_service;"
        ),
    ]